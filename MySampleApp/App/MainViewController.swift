//
//  MainViewController.swift
//  MySampleApp
//
//
// Copyright 2016 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.8
//

import UIKit
import AWSMobileHubHelper

class MainViewController: UIViewController {
    
    var signInObserver: AnyObject!
    var signOutObserver: AnyObject!
    
    @IBOutlet weak var viewStreetButton: UIButton!
    @IBOutlet weak var viewTonightButton: UIButton!
    @IBOutlet weak var inputStatusButton: UIButton!
    @IBOutlet weak var profileButton: UIButton!
    @IBOutlet weak var signoutButton: UIButton!
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.backBarButtonItem = UIBarButtonItem(title: "Back", style: .Plain, target: nil, action: nil)
        
        // background
        self.view.addMainBackground()
        navigationController?.navigationBar.setBackgroundImage(UIImage(), forBarMetrics: .Default)
        navigationController?.navigationBar.shadowImage = UIImage()
        navigationController?.navigationBar.translucent = true
        navigationController?.view.backgroundColor = UIColor.clearColor()
        navigationController?.navigationBar.backgroundColor = UIColor.clearColor()
        
        // Default theme settings.
        navigationController!.navigationBar.barTintColor = UIColor(red: 0xF5/255.0, green: 0x85/255.0, blue: 0x35/255.0, alpha: 1.0)
        navigationController!.navigationBar.tintColor = UIColor.whiteColor()

        self.viewStreetButton.addTarget(self, action: #selector(MainViewController.setNavBarTitle), forControlEvents: .TouchUpInside)
        self.viewTonightButton.addTarget(self, action: #selector(MainViewController.setNavBarTitle), forControlEvents: .TouchUpInside)
        self.inputStatusButton.addTarget(self, action: #selector(MainViewController.setNavBarTitle), forControlEvents: .TouchUpInside)
        self.signoutButton.addTarget(self, action: #selector(MainViewController.handleLogout), forControlEvents: .TouchUpInside)
        
        signInObserver = NSNotificationCenter.defaultCenter().addObserverForName(AWSIdentityManagerDidSignInNotification, object: AWSIdentityManager.defaultIdentityManager(), queue: NSOperationQueue.mainQueue(), usingBlock: {[weak self] (note: NSNotification) -> Void in
                print("Sign In Observer observed sign in.")
            
        })
        
        signOutObserver = NSNotificationCenter.defaultCenter().addObserverForName(AWSIdentityManagerDidSignOutNotification, object: AWSIdentityManager.defaultIdentityManager(), queue: NSOperationQueue.mainQueue(), usingBlock: {[weak self](note: NSNotification) -> Void in
                print("Sign Out Observer observed sign out.")
        })
            }
    
    deinit {
        NSNotificationCenter.defaultCenter().removeObserver(signInObserver)
        NSNotificationCenter.defaultCenter().removeObserver(signOutObserver)
    }
    
    func setNavBarTitle() {
        navigationItem.backBarButtonItem?.title = "Home"
    }

    
    func goToLogin() {
            print("Handling optional sign-in.")
            let loginStoryboard = UIStoryboard(name: "SignIn", bundle: nil)
            let loginController = loginStoryboard.instantiateViewControllerWithIdentifier("SignIn")
            navigationController?.pushViewController(loginController, animated: true)
    }
    
    func handleLogout() {
        if (AWSIdentityManager.defaultIdentityManager().loggedIn) {
            AWSIdentityManager.defaultIdentityManager().logoutWithCompletionHandler({(result: AnyObject?, error: NSError?) -> Void in
            
                self.presentSignInViewController()
                self.navigationController!.popToRootViewControllerAnimated(false)
            })
        } else {
            assert(false)
        }
    }
    
    
    private func presentSignInViewController() {
        let appDelegate = UIApplication.sharedApplication().delegate as! AppDelegate
        let storyboard = UIStoryboard(name: "SignIn", bundle: nil)
        let initialViewController = storyboard.instantiateViewControllerWithIdentifier("SignInHome")
        
        let navigationController = UINavigationController(rootViewController: initialViewController)
        
        // code below is for a gentle navigation to the home view
        let overlayView = self.view.snapshotViewAfterScreenUpdates(false)!
        navigationController.view.addSubview(overlayView)
        appDelegate.window!.rootViewController = navigationController
        UIView.animateWithDuration(0.7, delay: 0, options: .TransitionCrossDissolve, animations: {
            overlayView.alpha = 0}, completion: { finished in
                overlayView.removeFromSuperview()
        })
        
        makeNavBarTransparent(navigationController)
    }
    
    private func makeNavBarTransparent(navigationController: UINavigationController) {
        navigationController.navigationBar.setBackgroundImage(UIImage(), forBarMetrics: UIBarMetrics.Default)
        navigationController.navigationBar.shadowImage = UIImage()
        navigationController.navigationBar.translucent = true
    }
}

class FeatureDescriptionViewController: UIViewController {
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.backBarButtonItem = UIBarButtonItem.init(title: "Back", style: .Plain, target: nil, action: nil)
    }
}
