//
//  SignInViewController.swift
//  MySampleApp
//
//
// Copyright 2016 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.8
//
//

import UIKit
import AWSMobileHubHelper

class SignInViewController: UIViewController {
    @IBOutlet weak var anchorView: UIView!

// Support code for Facebook provider UI.
    @IBOutlet weak var facebookButton: UIButton!

// Support code for Google provider UI.
    @IBOutlet weak var googleButton: UIButton!

    @IBOutlet weak var customCreateAccountButton: UIButton!
    @IBOutlet weak var leftHorizontalBar: UIView!
    @IBOutlet weak var rightHorizontalBar: UIView!
    @IBOutlet weak var orSignInWithLabel: UIView!
    
    // things to arrange
    @IBOutlet weak var header: UILabel!
    @IBOutlet weak var customUserIdField: UITextField!
    @IBOutlet weak var customPasswordField: UITextField!
    @IBOutlet weak var netIdUnder: UILabel!
    @IBOutlet weak var passwordUnder: UILabel!
    @IBOutlet weak var customForgotPasswordButton: UIButton!
    @IBOutlet weak var customProviderButton: UIButton!
    
    @IBOutlet weak var userIcon: UIImageView!
    @IBOutlet weak var passwordIcon: UIImageView!
    
    var didSignInObserver: AnyObject!
    
    var passwordAuthenticationCompletion: AWSTaskCompletionSource?
    
    // MARK: - View lifecycle
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
         print("Sign In Loading.")
        
        // background
        self.view.addBackground()
        
        // Default theme settings.
        navigationController!.navigationBar.barTintColor = UIColor(red: 0xF5/255.0, green: 0x85/255.0, blue: 0x35/255.0, alpha: 1.0)
        navigationController!.navigationBar.tintColor = UIColor.whiteColor()
        
            didSignInObserver =  NSNotificationCenter.defaultCenter().addObserverForName(AWSIdentityManagerDidSignInNotification,
                object: AWSIdentityManager.defaultIdentityManager(),
                queue: NSOperationQueue.mainQueue(),
                usingBlock: {(note: NSNotification) -> Void in
                    // perform successful login actions here
            })

                // Custom UI Setup
                customProviderButton.addTarget(self, action: "handleCustomSignIn", forControlEvents: .TouchUpInside)
                
                customForgotPasswordButton.addTarget(self, action: "handleUserPoolForgotPassword", forControlEvents: .TouchUpInside)
                customProviderButton.setImage(UIImage(named: "LoginButton"), forState: .Normal)
        
        navigationController?.navigationBar.setBackgroundImage(UIImage(), forBarMetrics: .Default)
        navigationController?.navigationBar.shadowImage = UIImage()
        navigationController?.navigationBar.translucent = true
        navigationController?.view.backgroundColor = UIColor.clearColor()
        navigationController?.navigationBar.backgroundColor = UIColor.clearColor()
        
        
    }
    
    
    deinit {
        NSNotificationCenter.defaultCenter().removeObserver(didSignInObserver)
    }
    
    func dimissController() {
        self.dismissViewControllerAnimated(true, completion: nil)
    }
    
    // MARK: - Utility Methods
    
    func handleLoginWithSignInProvider(signInProvider: AWSSignInProvider) {
        AWSIdentityManager.defaultIdentityManager().loginWithSignInProvider(signInProvider, completionHandler: {(result: AnyObject?, error: NSError?) -> Void in
            // If no error reported by SignInProvider, discard the sign-in view controller.
            if error == nil {
                dispatch_async(dispatch_get_main_queue(),{
                    //if the login is successful, we change what the root view controller is
                    if (AWSIdentityManager.defaultIdentityManager().loggedIn) {
                        
                        let appDelegate = UIApplication.sharedApplication().delegate as! AppDelegate
                        let storyboard = UIStoryboard(name: "Main", bundle: nil)
                        let initialViewController = storyboard.instantiateViewControllerWithIdentifier("Main")
                        
                        let navigationController = UINavigationController(rootViewController: initialViewController)
                        
                        navigationController.navigationBar.tintColor = UIColor(red: 0.953, green: 0.522, blue: 0.251, alpha: 1.00)
                        
                        
                        // code below is for a gentle navigation to the home view
                        let overlayView = self.view.snapshotViewAfterScreenUpdates(false)!
                        navigationController.view.addSubview(overlayView)
                        appDelegate.window!.rootViewController = navigationController
                        UIView.animateWithDuration(0.7, delay: 0, options: .TransitionCrossDissolve, animations: {
                            overlayView.alpha = 0}, completion: { finished in
                        overlayView.removeFromSuperview()
                        })
                    }
                    
                    //otherwise, we just return to the root login screen
                    self.navigationController?.popToRootViewControllerAnimated(true)
                })
            }
             print("result = \(result), error = \(error)")
        })
    }

    func showErrorDialog(loginProviderName: String, withError error: NSError) {
         print("\(loginProviderName) failed to sign in w/ error: \(error)")
        let alertController = UIAlertController(title: NSLocalizedString("Sign-in Provider Sign-In Error", comment: "Sign-in error for sign-in failure."), message: NSLocalizedString("\(loginProviderName) failed to sign in w/ error: \(error)", comment: "Sign-in message structure for sign-in failure."), preferredStyle: .Alert)
        let doneAction = UIAlertAction(title: NSLocalizedString("Cancel", comment: "Label to cancel sign-in failure."), style: .Cancel, handler: nil)
        alertController.addAction(doneAction)
        presentViewController(alertController, animated: true, completion: nil)
    }

    // MARK: - IBActions

    
}
